{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phooryr\\\\Desktop\\\\FORMATION\\\\Projets\\\\Projet 11\\\\Projet11\\\\frontend\\\\src\\\\components\\\\editUser\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserEdit() {\n  _s();\n  const userData = useSelector(state => state.userData);\n  const dispatch = useDispatch();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedFirstName, setEditedFirstName] = useState(userData.firstName);\n  const [editedLastName, setEditedLastName] = useState(userData.lastName);\n  const handleEditButtonClick = () => {\n    setIsEditing(true);\n  };\n  const handleFirstNameChange = e => {\n    setEditedFirstName(e.target.value);\n  };\n  const handleLastNameChange = e => {\n    setEditedLastName(e.target.value);\n  };\n  const handleInputBlur = async () => {\n    setIsEditing(false);\n    try {\n      const response = await fetch(\"http://localhost:3001/api/v1/user/update\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          firstName: editedFirstName,\n          lastName: editedLastName\n        })\n      });\n      if (response.ok) {\n        const updatedUserData = await response.json();\n        // Mettre à jour le store Redux avec les données utilisateur mises à jour\n        dispatch({\n          type: \"UPDATE_USER_DATA\",\n          payload: updatedUserData\n        });\n      } else {\n        // Gérer les erreurs de mise à jour des données utilisateur\n      }\n    } catch (error) {\n      // Gérer les erreurs\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main bg-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome back\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedFirstName,\n            onChange: handleFirstNameChange,\n            onBlur: handleInputBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedLastName,\n            onChange: handleLastNameChange,\n            onBlur: handleInputBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [userData.firstName, \" \", userData.lastName, \"!\"]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: handleEditButtonClick,\n        children: \"Edit Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(UserEdit, \"XtqIKDexW/Y9QyHQgGIxBxIyiGU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = UserEdit;\nexport default UserEdit;\nvar _c;\n$RefreshReg$(_c, \"UserEdit\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","UserEdit","_s","userData","state","dispatch","isEditing","setIsEditing","editedFirstName","setEditedFirstName","firstName","editedLastName","setEditedLastName","lastName","handleEditButtonClick","handleFirstNameChange","e","target","value","handleLastNameChange","handleInputBlur","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","ok","updatedUserData","json","type","payload","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Phooryr/Desktop/FORMATION/Projets/Projet 11/Projet11/frontend/src/components/editUser/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction UserEdit() {\r\n  const userData = useSelector((state) => state.userData);\r\n  const dispatch = useDispatch();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedFirstName, setEditedFirstName] = useState(userData.firstName);\r\n  const [editedLastName, setEditedLastName] = useState(userData.lastName);\r\n\r\n  const handleEditButtonClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleFirstNameChange = (e) => {\r\n    setEditedFirstName(e.target.value);\r\n  };\r\n\r\n  const handleLastNameChange = (e) => {\r\n    setEditedLastName(e.target.value);\r\n  };\r\n\r\n  const handleInputBlur = async () => {\r\n    setIsEditing(false);\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/api/v1/user/update\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({\r\n          firstName: editedFirstName,\r\n          lastName: editedLastName,\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        const updatedUserData = await response.json();\r\n        // Mettre à jour le store Redux avec les données utilisateur mises à jour\r\n        dispatch({ type: \"UPDATE_USER_DATA\", payload: updatedUserData });\r\n      } else {\r\n        // Gérer les erreurs de mise à jour des données utilisateur\r\n      }\r\n    } catch (error) {\r\n      // Gérer les erreurs\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"main bg-dark\">\r\n      <div className=\"header\">\r\n        <h1>\r\n          Welcome back\r\n          <br />\r\n          {isEditing ? (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                value={editedFirstName}\r\n                onChange={handleFirstNameChange}\r\n                onBlur={handleInputBlur}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                value={editedLastName}\r\n                onChange={handleLastNameChange}\r\n                onBlur={handleInputBlur}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              {userData.firstName} {userData.lastName}!\r\n            </>\r\n          )}\r\n        </h1>\r\n        <button className=\"edit-button\" onClick={handleEditButtonClick}>\r\n          Edit Name\r\n        </button>\r\n      </div>\r\n      {/* Reste du contenu de votre page utilisateur */}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default UserEdit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}