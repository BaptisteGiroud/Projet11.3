{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phooryr\\\\Desktop\\\\FORMATION\\\\Projets\\\\Projet 11\\\\Projet11\\\\frontend\\\\src\\\\components\\\\editUser\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  const userData = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedButtonName, setEditedButtonName] = useState(\"Edit Name\");\n  const handleEditButtonClick = () => {\n    setIsEditing(true);\n    setEditedButtonName(userData.userName);\n  };\n  const handleButtonNameChange = e => {\n    setEditedButtonName(e.target.value);\n  };\n  const handleInputBlur = async () => {\n    setIsEditing(false);\n    try {\n      const response = await fetch(\"http://localhost:3001/api/v1/user/update\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          userName: editedButtonName\n        })\n      });\n      if (response.ok) {\n        const updatedUserData = await response.json();\n        dispatch({\n          type: \"UPDATE_USER_DATA\",\n          payload: updatedUserData\n        });\n      } else {\n        console.error(\"Error lors de l'édition du user name\");\n      }\n    } catch (error) {\n      console.error(\"Error lors de l'édition du user name\");\n    }\n    setEditedButtonName(\"Edit Name\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome back\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), userData.firstName, \" \", userData.lastName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: editedButtonName,\n      onChange: handleButtonNameChange,\n      onBlur: handleInputBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-button\",\n      onClick: handleEditButtonClick,\n      children: editedButtonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(User, \"QxzCB+UnA9uvDKhZekSOoCxt3nw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","jsxDEV","_jsxDEV","User","_s","userData","state","user","dispatch","isEditing","setIsEditing","editedButtonName","setEditedButtonName","handleEditButtonClick","userName","handleButtonNameChange","e","target","value","handleInputBlur","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","ok","updatedUserData","json","type","payload","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","firstName","lastName","onChange","onBlur","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Phooryr/Desktop/FORMATION/Projets/Projet 11/Projet11/frontend/src/components/editUser/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction User() {\r\n  const userData = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedButtonName, setEditedButtonName] = useState(\"Edit Name\");\r\n\r\n  const handleEditButtonClick = () => {\r\n    setIsEditing(true);\r\n    setEditedButtonName(userData.userName);\r\n  };\r\n\r\n  const handleButtonNameChange = (e) => {\r\n    setEditedButtonName(e.target.value);\r\n  };\r\n\r\n  const handleInputBlur = async () => {\r\n    setIsEditing(false);\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/api/v1/user/update\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({\r\n          userName: editedButtonName,\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        const updatedUserData = await response.json();\r\n        dispatch({ type: \"UPDATE_USER_DATA\", payload: updatedUserData });\r\n      } else {\r\n        console.error(\"Error lors de l'édition du user name\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error lors de l'édition du user name\");\r\n    }\r\n    setEditedButtonName(\"Edit Name\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>\r\n        Welcome back\r\n        <br />\r\n        {userData.firstName} {userData.lastName}!\r\n      </h1>\r\n      {isEditing ? (\r\n        <input\r\n          type=\"text\"\r\n          value={editedButtonName}\r\n          onChange={handleButtonNameChange}\r\n          onBlur={handleInputBlur}\r\n        />\r\n      ) : (\r\n        <button className=\"edit-button\" onClick={handleEditButtonClick}>\r\n          {editedButtonName}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACnD,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,WAAW,CAAC;EAErE,MAAMe,qBAAqB,GAAGA,CAAA,KAAM;IAClCH,YAAY,CAAC,IAAI,CAAC;IAClBE,mBAAmB,CAACP,QAAQ,CAACS,QAAQ,CAAC;EACxC,CAAC;EAED,MAAMC,sBAAsB,GAAIC,CAAC,IAAK;IACpCJ,mBAAmB,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCT,YAAY,CAAC,KAAK,CAAC;IACnB,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACvEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QACzD,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBf,QAAQ,EAAEH;QACZ,CAAC;MACH,CAAC,CAAC;MACF,IAAIS,QAAQ,CAACU,EAAE,EAAE;QACf,MAAMC,eAAe,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QAC7CxB,QAAQ,CAAC;UAAEyB,IAAI,EAAE,kBAAkB;UAAEC,OAAO,EAAEH;QAAgB,CAAC,CAAC;MAClE,CAAC,MAAM;QACLI,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC;MACvD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC;IACvD;IACAxB,mBAAmB,CAAC,WAAW,CAAC;EAClC,CAAC;EAED,oBACEV,OAAA;IAAKmC,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBpC,OAAA;MAAAoC,QAAA,GAAI,cAEF,eAAApC,OAAA;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACLrC,QAAQ,CAACsC,SAAS,EAAC,GAAC,EAACtC,QAAQ,CAACuC,QAAQ,EAAC,GAC1C;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJjC,SAAS,gBACRP,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXf,KAAK,EAAEP,gBAAiB;MACxBkC,QAAQ,EAAE9B,sBAAuB;MACjC+B,MAAM,EAAE3B;IAAgB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,gBAEFxC,OAAA;MAAQmC,SAAS,EAAC,aAAa;MAACU,OAAO,EAAElC,qBAAsB;MAAAyB,QAAA,EAC5D3B;IAAgB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtC,EAAA,CA7DQD,IAAI;EAAA,QACMH,WAAW,EACXD,WAAW;AAAA;AAAAiD,EAAA,GAFrB7C,IAAI;AA+Db,eAAeA,IAAI;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}